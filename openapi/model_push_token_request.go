/*
Adder API

Adder API

API version: v1
Contact: support@blinklabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PushTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PushTokenRequest{}

// PushTokenRequest struct for PushTokenRequest
type PushTokenRequest struct {
	FcmToken string `json:"fcmToken"`
}

type _PushTokenRequest PushTokenRequest

// NewPushTokenRequest instantiates a new PushTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushTokenRequest(fcmToken string) *PushTokenRequest {
	this := PushTokenRequest{}
	this.FcmToken = fcmToken
	return &this
}

// NewPushTokenRequestWithDefaults instantiates a new PushTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushTokenRequestWithDefaults() *PushTokenRequest {
	this := PushTokenRequest{}
	return &this
}

// GetFcmToken returns the FcmToken field value
func (o *PushTokenRequest) GetFcmToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FcmToken
}

// GetFcmTokenOk returns a tuple with the FcmToken field value
// and a boolean to check if the value has been set.
func (o *PushTokenRequest) GetFcmTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FcmToken, true
}

// SetFcmToken sets field value
func (o *PushTokenRequest) SetFcmToken(v string) {
	o.FcmToken = v
}

func (o PushTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PushTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fcmToken"] = o.FcmToken
	return toSerialize, nil
}

func (o *PushTokenRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fcmToken",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf(
				"no value given for required property %v",
				requiredProperty,
			)
		}
	}

	varPushTokenRequest := _PushTokenRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPushTokenRequest)

	if err != nil {
		return err
	}

	*o = PushTokenRequest(varPushTokenRequest)

	return err
}

type NullablePushTokenRequest struct {
	value *PushTokenRequest
	isSet bool
}

func (v NullablePushTokenRequest) Get() *PushTokenRequest {
	return v.value
}

func (v *NullablePushTokenRequest) Set(val *PushTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePushTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePushTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushTokenRequest(
	val *PushTokenRequest,
) *NullablePushTokenRequest {
	return &NullablePushTokenRequest{value: val, isSet: true}
}

func (v NullablePushTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
